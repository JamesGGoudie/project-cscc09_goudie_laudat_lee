# Credits:
#
# Original Config:
# https://github.com/heroku/heroku-buildpack-nginx/blob/master/config/nginx.conf.erb
# https://github.com/heroku/heroku-buildpack-nginx/blob/master/config/nginx-solo-sample.conf.erb
#
# Nginx as Websocket Proxy:
# https://www.nginx.com/blog/websocket-nginx/
#
# HTTP to HTTPS Redirect:
# https://github.com/mgmco/heroku-buildpack-nginx/blob/master/config/nginx.conf.erb
#
# Let Angular handle 404:
# https://www.digitalocean.com/community/questions/nginx-404-error-with-existing-urls-angular-2-one-page-application-with-routing

daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
  use epoll;
  accept_mutex on;
  worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;

  server_tokens off;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
  access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
  error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Must read the body in 5 seconds.
  client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

  # Defines the location of the GraphQL server.
  upstream app_server {
    server localhost:3000;
  }

  # Depending on the value of http_upgrade, determine the value of
  # connection_upgrade.
  # ex: http_upgrade = default => connection_upgrade = upgrade
  # Needed for the Websocket connection requests.
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  # Defines the location of the PeerJS server.
  upstream websocket {
    server localhost:9000;
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name _;
    keepalive_timeout 5;

    # If the client is not connecting through HTTPS...
    if ($http_x_forwarded_proto != 'https') {
      # ... then redirect them to connect through HTTPS.
      return 301 https://$host$request_uri;
    }

    location / {
      client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;

      # Path to the static Angular files.
      root /app/dist/front;

      # Specifies the index of the Angular project.
      index index.html;
      # Ensures that all remaining routes are forwarded to the Angular.
      # As a consequence, the Angular will handle 404s.
      try_files $uri $uri/ /index.html;
    }

    # Act as a proxy for the GraphQL server.
    location /graphql {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    # Act as a proxy for the
    location /peer {
      proxy_pass http://websocket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }
  }
}
